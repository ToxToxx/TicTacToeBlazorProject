@page "/"
@using TicTacToeBlazorProject.Shared
@inject NavigationManager NavigationManager
@rendermode @(new InteractiveWebAssemblyRenderMode(false))

<h3>Lobby of Tic Tac Toe Game</h3>

@if(currentRoom is null) {

    <input @bind="playerName" placeholder="Player Name" />
    <input @bind="currentRoomName" placeholder="Room Name" />
    <button @onclick="CreateRoom"> Create Room </button>

    <h3>Rooms: </h3>
    <ul>
        @foreach (var room in rooms)
        {
            <li>
                @room.RoomName <button @onclick="() => JoinRoom(room.RoomId)">
                    Join
                </button>
            </li>
        }
    </ul>
}
else
{
    <Room />
}

@code {
    private HubConnection? hubConnection;
    private string playerName = string.Empty;
    private string currentRoomName = string.Empty;
    private GameRoom? currentRoom;
    private List<GameRoom> rooms = new();

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("/gamehub"))
            .Build();

        hubConnection.On<List<GameRoom>>("Rooms", (roomsList) =>
        {
            Console.WriteLine($"Rooms. Count = {roomsList.Count}");
            rooms = roomsList;
        });

        await hubConnection.StartAsync();
    }


    private async Task CreateRoom()
    {
        if (hubConnection is null) return;

        currentRoom = await hubConnection
        .InvokeAsync<GameRoom>
        ("CreateRoom", currentRoomName,playerName);
    }

    private async Task JoinRoom(string roomId)
    {
        if (hubConnection is null) return;

        var joinedRoom = await hubConnection.
        InvokeAsync<GameRoom>
        ("JoinRoom", roomId, playerName);

        if(joinedRoom is not null)
        {
            currentRoom = joinedRoom;
        }
        else
        {
            Console.WriteLine("Room is full or does not exist");
        }
    }
}
