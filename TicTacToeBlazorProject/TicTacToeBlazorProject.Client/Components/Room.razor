@if (CurrentRoom is not null)
{
    <h3>@CurrentRoom.RoomName</h3>
    if (CurrentRoom.Players.Count < 2)
    {
        <h4>Waiting for another player to join...</h4>

    }
    if(!CurrentRoom.Game.GameStarted 
    && CurrentRoom.Game.PlayerXId != myPlayerId
    && CurrentRoom.Players.Count == 2)
    {
        <h4> Waiting for the other to start the game...</h4>
    }
}

@code {
    private string? myPlayerId;
    [CascadingParameter]
    public HubConnection? HubConnection { get; set; }
    [Parameter]
    public GameRoom? CurrentRoom { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (CurrentRoom is null
            || HubConnection is null
            || HubConnection.ConnectionId is null)
            return;

        myPlayerId = HubConnection.ConnectionId;

        HubConnection.On<Player>("PlayerJoined", player =>
        {
            if (CurrentRoom is not null)
            {
                CurrentRoom.Players.Add(player);
                InvokeAsync(StateHasChanged);
            }
        });

        HubConnection.On<GameRoom>("UpdateGame", serverRoom =>
        {
            CurrentRoom = serverRoom;
            StateHasChanged();
        });
    }

    async Task StartGame()
    {
        if (HubConnection is null || CurrentRoom is null) return;

        await HubConnection
        .InvokeAsync("StartGame", CurrentRoom.RoomId);
    }
}
